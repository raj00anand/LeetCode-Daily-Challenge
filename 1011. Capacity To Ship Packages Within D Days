class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int totalSum=0;
        

        for(int val:weights){
            totalSum += val;
            
        }
        int low=0, high=totalSum;
        int ans = -1;
        while(low<=high){
            int mid = (low+high)/2;
            if(isPossible(weights, mid, days)){
                ans = mid;
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        return ans;
    }
    public boolean isPossible(int[] weights, int mid, int days){
        
        int currWeights = 0;
        int day = 1;
        for(int i=0;i<weights.length;i++){
            if(currWeights+weights[i]<=mid){
                currWeights += weights[i];
            }else{
                day++;
                if(day>days || weights[i]>mid){
                    return false;
                }
                currWeights = weights[i];
            }
            
        }
        return true;
    }
}
